package com.yaorange.webservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.13
 * 2020-08-21T14:01:02.610+08:00
 * Generated source version: 3.2.13
 */
@WebServiceClient(name = "WSInterfaceService",
        wsdlLocation = "http://localhost:8088/crm/ws/wstest?wsdl",
        targetNamespace = "http://webservice.yaorange.com/")
public class WSInterfaceService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://webservice.yaorange.com/", "WSInterfaceService");
    public final static QName WSInterfacePort = new QName("http://webservice.yaorange.com/", "WSInterfacePort");

    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8088/crm/ws/wstest?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(WSInterfaceService.class.getName())
                    .log(java.util.logging.Level.INFO,
                            "Can not initialize the default wsdl from {0}", "http://localhost:8088/crm/ws/wstest?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public WSInterfaceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WSInterfaceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSInterfaceService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public WSInterfaceService(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public WSInterfaceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public WSInterfaceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }


    /**
     * @return returns WSInterface
     */
    @WebEndpoint(name = "WSInterfacePort")
    public WSInterface getWSInterfacePort() {
        return super.getPort(WSInterfacePort, WSInterface.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns WSInterface
     */
    @WebEndpoint(name = "WSInterfacePort")
    public WSInterface getWSInterfacePort(WebServiceFeature... features) {
        return super.getPort(WSInterfacePort, WSInterface.class, features);
    }

}
